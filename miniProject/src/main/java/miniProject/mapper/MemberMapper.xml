<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC    
   "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="miniProject.mapper.MemberMapper">

<sql id="memberBaseColumns">
	MEMBER_NUM, MEMBER_NAME, MEMBER_ID, MEMBER_PW, 
	MEMBER_BIRTH, MEMBER_GENDER, MEMBER_JUMIN, 
	MEMBER_EMAIL, MEMBER_PHONE, MEMBER_ADDR,
	MEMBER_ADDR_DETAIL, MEMBER_POST, MEMBER_VIP
</sql>

<select id="memberSelectList" resultType="member" parameterType="startEndPageDTO">
    select *
	from(
    SELECT row_number() over (order by member_num) as rn
        , <include refid="memberBaseColumns"/>    
    from member
    <where>
	    <if test="searchWord != null">
	    	member_name like '%' || #{searchWord} || '%'
	    		or member_id like '%' || #{searchWord} || '%'
	    		or member_num like '%' || #{searchWord} || '%'
	    </if>
    </where> )                   
	where rn between #{startRow} and #{endRow}  
</select>

<select id="memberCount" resultType="integer">
	select count(*) from member
</select>

<insert id="memberInsert" parameterType="member">
   insert into member(	MEMBER_NUM, MEMBER_NAME, MEMBER_ID, MEMBER_PW, 
						MEMBER_BIRTH, MEMBER_GENDER, MEMBER_JUMIN, 
						MEMBER_EMAIL, MEMBER_PHONE, MEMBER_ADDR,
						MEMBER_ADDR_DETAIL, MEMBER_POST, MEMBER_VIP)
   values(#{memberNum},#{memberName},#{memberId},#{memberPw}
   		,#{memberBirth},#{memberGender},#{memberJumin}
   		,#{memberEmail},#{memberPhone},#{memberAddr}
   		,#{memberAddrDetail},#{memberPost},'N')
</insert>

<select id="memberSelectOne" parameterType="string" resultType="member">
	select <include refid="memberBaseColumns"/>
    from member
    where MEMBER_NUM = #{memberNumOrId} or MEMBER_ID = #{memberNumOrId}
</select>

<update id="memberUpdate" parameterType="member">
	update member
	<trim prefix="set" suffixOverrides="," >
	    MEMBER_POST = #{memberPost},
		MEMBER_ADDR = #{memberAddr},
		<if test="memberAddrDetail != null">
			MEMBER_ADDR_DETAIL = #{memberAddrDetail},
		</if>
		<if test="memberAddrDetail == null">
			MEMBER_ADDR_DETAIL = null,
		</if>
		MEMBER_PHONE = #{memberPhone},
		MEMBER_EMAIL = #{memberEmail},
	</trim>
	<where>
		<if test="memberNum != null">
			MEMBER_NUM = #{memberNum}
		</if>
		<if test="memberNum == null">
			MEMBER_ID = #{memberId}
		</if>
	</where>
</update>

<delete id="memberDelete" parameterType="string">
	delete from member
	<trim prefix="where" prefixOverrides="AND|OR">
		member_num = #{memberNum}
	</trim>
</delete>

</mapper>